- 메모리 구조
배열(Array): 연속된 메모리 공간에 데이터를 저장합니다. 각 요소는 인덱스를 사용하여 접근할 수 있습니다.
연결 리스트(Linked List): 각 요소가 데이터와 다음 요소를 가리키는 포인터로 구성됩니다. 이러한 요소들은 메모리 상에 분산되어 있을 수 있습니다.

- 삽입과 삭제
배열(Array): 삽입이나 삭제가 발생하면 해당 요소 뒤의 모든 요소를 이동시켜야 합니다. 따라서 삽입과 삭제가 빈번하게 발생하는 경우에는 효율적이지 않을 수 있습니다.
연결 리스트(Linked List): 요소의 추가나 삭제가 발생하면 해당 요소의 포인터를 조정하여 새로운 요소를 추가하거나 기존 요소를 삭제합니다. 이 때문에 삽입과 삭제가 더욱 효율적입니다.

- 접근 속도
배열(Array): 인덱스를 통해 바로 접근할 수 있기 때문에 요소에 대한 접근이 빠릅니다. O(1)의 시간 복잡도를 갖습니다.
연결 리스트(Linked List): 요소들이 메모리에 분산되어 있기 때문에 특정 요소에 접근하려면 처음부터 순차적으로 탐색해야 합니다. 따라서 평균적으로는 O(n)의 시간 복잡도를 갖습니다.