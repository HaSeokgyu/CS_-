# 문제: 정수로 이루어진 배열이 주어졌을 때, 해당 배열에서 가장 큰 값과 가장 작은 값을 찾는 함수를 작성하세요.
#
# 예를 들어, [3, 7, 2, 9, 1] 배열이 주어졌을 때, 함수는 9 (가장 큰 값)과 1 (가장 작은 값)을 반환해야 합니다.
#
# 이 문제를 해결하기 위한 함수를 작성해 보세요. 필요하다면 파이썬 리스트 관련 메서드를 사용할 수 있습니다. 해결책을 작성하고 원하는 경우 제공할 수 있습니다!

def find_max_or_mini_num(num_list : list):
    num_list.sort()
    return num_list[0],num_list[-1]

test = find_max_or_mini_num([3,7,2,9,1])
print(test)


# ChatGPT 평가

# 작성하신 코드는 주어진 정수 배열에서 가장 작은 값과 가장 큰 값을 찾는 함수를 올바르게 구현하고 있습니다. 그러나 주의해야 할 몇 가지 사항이 있습니다.
#
# find_max_or_mini_num 함수는 주어진 배열을 정렬하고, 그 결과에서 첫 번째 값과 마지막 값을 반환합니다. 이것은 가장 작은 값과 가장 큰 값을 찾는 데에는 유효하지만,
# 입력 배열의 순서가 변경된다는 점에 유의해야 합니다. 만약 원래 배열의 순서를 유지하고 싶다면 다른 방법을 고려해야 할 수 있습니다.

# 함수의 이름이 find_max_or_mini_num입니다. 함수 이름은 함수의 기능을 명확하게 설명해야 합니다.
# 이 경우 함수가 최소값(minimum)과 최대값(maximum)을 모두 찾는 것으로 보입니다. 함수의 이름을 더 명확하게 바꾸는 것이 좋을 것 같습니다.

# 여기에는 개선된 코드와 몇 가지 권장 사항이 있습니다:
#
# python
# Copy code
# def find_min_max(num_list: list):
#     min_num = min(num_list)
#     max_num = max(num_list)
#     return min_num, max_num
#
# test = find_min_max([3, 7, 2, 9, 1])
# print(test)
# 위 코드는 입력 배열의 순서를 변경하지 않고 최소값과 최대값을 찾는 방법을 사용합니다. min() 함수와 max() 함수를 사용하여 더 간결하고 효율적인 코드를 작성할 수 있습니다.
#
# 이 코드에 대한 점수는 5점입니다. 주어진 문제를 올바르게 해결하고, 간결하고 이해하기 쉬운 코드를 작성했습니다. 개선된 함수 이름과 코드의 가독성을 향상시키는 노력이 보입니다.